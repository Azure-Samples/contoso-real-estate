{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.15.31.15270",
      "templateHash": "9560286699339839346"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "metadata": {
        "description": "Name of the the environment which is used to generate a short unique hash used in all resources."
      },
      "maxLength": 64,
      "minLength": 1
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Primary location for all resources"
      },
      "minLength": 1
    },
    "principalId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Id of the user or app to assign application roles"
      }
    },
    "apimServiceName": {
      "type": "string",
      "defaultValue": ""
    },
    "applicationInsightsDashboardName": {
      "type": "string",
      "defaultValue": ""
    },
    "applicationInsightsName": {
      "type": "string",
      "defaultValue": ""
    },
    "blogContainerAppName": {
      "type": "string",
      "defaultValue": ""
    },
    "cmsContainerAppName": {
      "type": "string",
      "defaultValue": ""
    },
    "containerAppsEnvironmentName": {
      "type": "string",
      "defaultValue": ""
    },
    "containerRegistryName": {
      "type": "string",
      "defaultValue": ""
    },
    "cosmosAccountName": {
      "type": "string",
      "defaultValue": ""
    },
    "cosmosDatabaseName": {
      "type": "string",
      "defaultValue": ""
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": ""
    },
    "logAnalyticsName": {
      "type": "string",
      "defaultValue": ""
    },
    "webServiceName": {
      "type": "string",
      "defaultValue": ""
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": ""
    },
    "storageContainerName": {
      "type": "string",
      "defaultValue": ""
    },
    "stripeContainerAppName": {
      "type": "string",
      "defaultValue": ""
    },
    "apiServiceName": {
      "type": "string",
      "defaultValue": ""
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": ""
    },
    "appKeys": {
      "type": "securestring"
    },
    "apiTokenSalt": {
      "type": "securestring"
    },
    "jwtSecret": {
      "type": "securestring"
    },
    "adminJwtSecret": {
      "type": "securestring"
    },
    "cmsDatabaseName": {
      "type": "string",
      "defaultValue": "strapi"
    },
    "cmsDatabaseUser": {
      "type": "string",
      "defaultValue": "strapi"
    },
    "cmsDatabaseServerName": {
      "type": "string",
      "defaultValue": ""
    },
    "cmsDatabasePassword": {
      "type": "securestring"
    },
    "stripePublicKey": {
      "type": "string"
    },
    "stripeSecretKey": {
      "type": "securestring"
    },
    "stripeWebhookSecret": {
      "type": "securestring"
    },
    "useAPIM": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Flag to use Azure API Management to mediate the calls between the Web frontend and the backend API"
      }
    }
  },
  "variables": {
    "$fxv#0": {
      "analysisServicesServers": "as",
      "apiManagementService": "apim-",
      "appConfigurationConfigurationStores": "appcs-",
      "appManagedEnvironments": "cae-",
      "appContainerApps": "ca-",
      "authorizationPolicyDefinitions": "policy-",
      "automationAutomationAccounts": "aa-",
      "blueprintBlueprints": "bp-",
      "blueprintBlueprintsArtifacts": "bpa-",
      "cacheRedis": "redis-",
      "cdnProfiles": "cdnp-",
      "cdnProfilesEndpoints": "cdne-",
      "cognitiveServicesAccounts": "cog-",
      "cognitiveServicesFormRecognizer": "cog-fr-",
      "cognitiveServicesTextAnalytics": "cog-ta-",
      "computeAvailabilitySets": "avail-",
      "computeCloudServices": "cld-",
      "computeDiskEncryptionSets": "des",
      "computeDisks": "disk",
      "computeDisksOs": "osdisk",
      "computeGalleries": "gal",
      "computeSnapshots": "snap-",
      "computeVirtualMachines": "vm",
      "computeVirtualMachineScaleSets": "vmss-",
      "containerInstanceContainerGroups": "ci",
      "containerRegistryRegistries": "cr",
      "containerServiceManagedClusters": "aks-",
      "databricksWorkspaces": "dbw-",
      "dataFactoryFactories": "adf-",
      "dataLakeAnalyticsAccounts": "dla",
      "dataLakeStoreAccounts": "dls",
      "dataMigrationServices": "dms-",
      "dBforMySQLServers": "mysql-",
      "dBforPostgreSQLServers": "psql-",
      "devicesIotHubs": "iot-",
      "devicesProvisioningServices": "provs-",
      "devicesProvisioningServicesCertificates": "pcert-",
      "documentDBDatabaseAccounts": "cosmos-",
      "eventGridDomains": "evgd-",
      "eventGridDomainsTopics": "evgt-",
      "eventGridEventSubscriptions": "evgs-",
      "eventHubNamespaces": "evhns-",
      "eventHubNamespacesEventHubs": "evh-",
      "hdInsightClustersHadoop": "hadoop-",
      "hdInsightClustersHbase": "hbase-",
      "hdInsightClustersKafka": "kafka-",
      "hdInsightClustersMl": "mls-",
      "hdInsightClustersSpark": "spark-",
      "hdInsightClustersStorm": "storm-",
      "hybridComputeMachines": "arcs-",
      "insightsActionGroups": "ag-",
      "insightsComponents": "appi-",
      "keyVaultVaults": "kv-",
      "kubernetesConnectedClusters": "arck",
      "kustoClusters": "dec",
      "kustoClustersDatabases": "dedb",
      "logicIntegrationAccounts": "ia-",
      "logicWorkflows": "logic-",
      "machineLearningServicesWorkspaces": "mlw-",
      "managedIdentityUserAssignedIdentities": "id-",
      "managementManagementGroups": "mg-",
      "migrateAssessmentProjects": "migr-",
      "networkApplicationGateways": "agw-",
      "networkApplicationSecurityGroups": "asg-",
      "networkAzureFirewalls": "afw-",
      "networkBastionHosts": "bas-",
      "networkConnections": "con-",
      "networkDnsZones": "dnsz-",
      "networkExpressRouteCircuits": "erc-",
      "networkFirewallPolicies": "afwp-",
      "networkFirewallPoliciesWebApplication": "waf",
      "networkFirewallPoliciesRuleGroups": "wafrg",
      "networkFrontDoors": "fd-",
      "networkFrontdoorWebApplicationFirewallPolicies": "fdfp-",
      "networkLoadBalancersExternal": "lbe-",
      "networkLoadBalancersInternal": "lbi-",
      "networkLoadBalancersInboundNatRules": "rule-",
      "networkLocalNetworkGateways": "lgw-",
      "networkNatGateways": "ng-",
      "networkNetworkInterfaces": "nic-",
      "networkNetworkSecurityGroups": "nsg-",
      "networkNetworkSecurityGroupsSecurityRules": "nsgsr-",
      "networkNetworkWatchers": "nw-",
      "networkPrivateDnsZones": "pdnsz-",
      "networkPrivateLinkServices": "pl-",
      "networkPublicIPAddresses": "pip-",
      "networkPublicIPPrefixes": "ippre-",
      "networkRouteFilters": "rf-",
      "networkRouteTables": "rt-",
      "networkRouteTablesRoutes": "udr-",
      "networkTrafficManagerProfiles": "traf-",
      "networkVirtualNetworkGateways": "vgw-",
      "networkVirtualNetworks": "vnet-",
      "networkVirtualNetworksSubnets": "snet-",
      "networkVirtualNetworksVirtualNetworkPeerings": "peer-",
      "networkVirtualWans": "vwan-",
      "networkVpnGateways": "vpng-",
      "networkVpnGatewaysVpnConnections": "vcn-",
      "networkVpnGatewaysVpnSites": "vst-",
      "notificationHubsNamespaces": "ntfns-",
      "notificationHubsNamespacesNotificationHubs": "ntf-",
      "operationalInsightsWorkspaces": "log-",
      "portalDashboards": "dash-",
      "powerBIDedicatedCapacities": "pbi-",
      "purviewAccounts": "pview-",
      "recoveryServicesVaults": "rsv-",
      "resourcesResourceGroups": "rg-",
      "searchSearchServices": "srch-",
      "serviceBusNamespaces": "sb-",
      "serviceBusNamespacesQueues": "sbq-",
      "serviceBusNamespacesTopics": "sbt-",
      "serviceEndPointPolicies": "se-",
      "serviceFabricClusters": "sf-",
      "signalRServiceSignalR": "sigr",
      "sqlManagedInstances": "sqlmi-",
      "sqlServers": "sql-",
      "sqlServersDataWarehouse": "sqldw-",
      "sqlServersDatabases": "sqldb-",
      "sqlServersDatabasesStretch": "sqlstrdb-",
      "storageStorageAccounts": "st",
      "storageStorageAccountsVm": "stvm",
      "storSimpleManagers": "ssimp",
      "streamAnalyticsCluster": "asa-",
      "synapseWorkspaces": "syn",
      "synapseWorkspacesAnalyticsWorkspaces": "synw",
      "synapseWorkspacesSqlPoolsDedicated": "syndp",
      "synapseWorkspacesSqlPoolsSpark": "synsp",
      "timeSeriesInsightsEnvironments": "tsi-",
      "webServerFarms": "plan-",
      "webSitesAppService": "app-",
      "webSitesAppServiceEnvironment": "ase-",
      "webSitesFunctions": "func-",
      "webStaticSites": "stapp-"
    },
    "abbrs": "[variables('$fxv#0')]",
    "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]",
    "tags": {
      "azd-env-name": "[parameters('environmentName')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "keyvault",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(not(empty(parameters('keyVaultName'))), createObject('value', parameters('keyVaultName')), createObject('value', format('{0}{1}', variables('abbrs').keyVaultVaults, variables('resourceToken'))))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "principalId": {
            "value": "[parameters('principalId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "17851101745302807047"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "principalId": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2022-07-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "accessPolicies": "[if(not(empty(parameters('principalId'))), createArray(createObject('objectId', parameters('principalId'), 'permissions', createObject('secrets', createArray('get', 'list')), 'tenantId', subscription().tenantId)), createArray())]"
              }
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('name')), '2022-07-01').vaultUri]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "monitoring",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "logAnalyticsName": "[if(not(empty(parameters('logAnalyticsName'))), createObject('value', parameters('logAnalyticsName')), createObject('value', format('{0}{1}', variables('abbrs').operationalInsightsWorkspaces, variables('resourceToken'))))]",
          "applicationInsightsName": "[if(not(empty(parameters('applicationInsightsName'))), createObject('value', parameters('applicationInsightsName')), createObject('value', format('{0}{1}', variables('abbrs').insightsComponents, variables('resourceToken'))))]",
          "applicationInsightsDashboardName": "[if(not(empty(parameters('applicationInsightsDashboardName'))), createObject('value', parameters('applicationInsightsDashboardName')), createObject('value', format('{0}{1}', variables('abbrs').portalDashboards, variables('resourceToken'))))]"
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "16253728449796196290"
            }
          },
          "parameters": {
            "logAnalyticsName": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string"
            },
            "applicationInsightsDashboardName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "loganalytics",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('logAnalyticsName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.15.31.15270",
                      "templateHash": "5341201376154525718"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.OperationalInsights/workspaces",
                      "apiVersion": "2021-12-01-preview",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "retentionInDays": 30,
                        "features": {
                          "searchVersion": 1
                        },
                        "sku": {
                          "name": "PerGB2018"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "applicationinsights",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('applicationInsightsName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "dashboardName": {
                    "value": "[parameters('applicationInsightsDashboardName')]"
                  },
                  "logAnalyticsWorkspaceId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loganalytics'), '2020-10-01').outputs.id.value]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.15.31.15270",
                      "templateHash": "7551606536596796999"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "dashboardName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "logAnalyticsWorkspaceId": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Insights/components",
                      "apiVersion": "2020-02-02",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "kind": "web",
                      "properties": {
                        "Application_Type": "web",
                        "WorkspaceResourceId": "[parameters('logAnalyticsWorkspaceId')]"
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "application-insights-dashboard",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('dashboardName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "applicationInsightsName": {
                            "value": "[parameters('name')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.15.31.15270",
                              "templateHash": "12700268132490402070"
                            }
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "applicationInsightsName": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Portal/dashboards",
                              "apiVersion": "2020-09-01-preview",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "properties": {
                                "lenses": [
                                  {
                                    "order": 0,
                                    "parts": [
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 0,
                                          "colSpan": 2,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "id",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/AspNetOverviewPinnedPart",
                                          "asset": {
                                            "idInputName": "id",
                                            "type": "ApplicationInsights"
                                          },
                                          "defaultMenuItemId": "overview"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 2,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/ProactiveDetectionAsyncPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          },
                                          "defaultMenuItemId": "ProactiveDetection"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 3,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "ResourceId",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/QuickPulseButtonSmallPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "endTime": null,
                                                "createdTime": "2018-05-04T01:20:33.345Z",
                                                "isInitialTime": true,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/AvailabilityNavButtonPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 5,
                                          "y": 0,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "endTime": null,
                                                "createdTime": "2018-05-08T18:47:35.237Z",
                                                "isInitialTime": true,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            },
                                            {
                                              "name": "ConfigurationId",
                                              "value": "78ce933e-e864-4b05-a27b-71fd55a6afad"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/AppMapButtonPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Usage",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 3,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "endTime": null,
                                                "createdTime": "2018-05-04T01:22:35.782Z",
                                                "isInitialTime": true,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/UsageUsersOverviewPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Reliability",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 7,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ResourceId",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            },
                                            {
                                              "name": "DataModel",
                                              "value": {
                                                "version": "1.0.0",
                                                "timeContext": {
                                                  "durationMs": 86400000,
                                                  "createdTime": "2018-05-04T23:42:40.072Z",
                                                  "isInitialTime": false,
                                                  "grain": 1,
                                                  "useDashboardTimeRange": false
                                                }
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "ConfigurationId",
                                              "value": "8a02f7bf-ac0f-40e1-afe9-f0e72cfee77f",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/CuratedBladeFailuresPinnedPart",
                                          "isAdapter": true,
                                          "asset": {
                                            "idInputName": "ResourceId",
                                            "type": "ApplicationInsights"
                                          },
                                          "defaultMenuItemId": "failures"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Responsiveness\r\n",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 11,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ResourceId",
                                              "value": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                            },
                                            {
                                              "name": "DataModel",
                                              "value": {
                                                "version": "1.0.0",
                                                "timeContext": {
                                                  "durationMs": 86400000,
                                                  "createdTime": "2018-05-04T23:43:37.804Z",
                                                  "isInitialTime": false,
                                                  "grain": 1,
                                                  "useDashboardTimeRange": false
                                                }
                                              },
                                              "isOptional": true
                                            },
                                            {
                                              "name": "ConfigurationId",
                                              "value": "2a8ede4f-2bee-4b9c-aed9-2db0e8a01865",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/CuratedBladePerformancePinnedPart",
                                          "isAdapter": true,
                                          "asset": {
                                            "idInputName": "ResourceId",
                                            "type": "ApplicationInsights"
                                          },
                                          "defaultMenuItemId": "performance"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 12,
                                          "y": 1,
                                          "colSpan": 3,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [],
                                          "type": "Extension/HubsExtension/PartType/MarkdownPart",
                                          "settings": {
                                            "content": {
                                              "settings": {
                                                "content": "# Browser",
                                                "title": "",
                                                "subtitle": ""
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 15,
                                          "y": 1,
                                          "colSpan": 1,
                                          "rowSpan": 1
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "ComponentId",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "MetricsExplorerJsonDefinitionId",
                                              "value": "BrowserPerformanceTimelineMetrics"
                                            },
                                            {
                                              "name": "TimeContext",
                                              "value": {
                                                "durationMs": 86400000,
                                                "createdTime": "2018-05-08T12:16:27.534Z",
                                                "isInitialTime": false,
                                                "grain": 1,
                                                "useDashboardTimeRange": false
                                              }
                                            },
                                            {
                                              "name": "CurrentFilter",
                                              "value": {
                                                "eventTypes": [
                                                  4,
                                                  1,
                                                  3,
                                                  5,
                                                  2,
                                                  6,
                                                  13
                                                ],
                                                "typeFacets": {},
                                                "isPermissive": false
                                              }
                                            },
                                            {
                                              "name": "id",
                                              "value": {
                                                "Name": "[parameters('applicationInsightsName')]",
                                                "SubscriptionId": "[subscription().subscriptionId]",
                                                "ResourceGroup": "[resourceGroup().name]"
                                              }
                                            },
                                            {
                                              "name": "Version",
                                              "value": "1.0"
                                            }
                                          ],
                                          "type": "Extension/AppInsightsExtension/PartType/MetricsExplorerBladePinnedPart",
                                          "asset": {
                                            "idInputName": "ComponentId",
                                            "type": "ApplicationInsights"
                                          },
                                          "defaultMenuItemId": "browser"
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "sessions/count",
                                                      "aggregationType": 5,
                                                      "namespace": "microsoft.insights/components/kusto",
                                                      "metricVisualization": {
                                                        "displayName": "Sessions",
                                                        "color": "#47BDF5"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "users/count",
                                                      "aggregationType": 5,
                                                      "namespace": "microsoft.insights/components/kusto",
                                                      "metricVisualization": {
                                                        "displayName": "Users",
                                                        "color": "#7E58FF"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Unique sessions and users",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "segmentationUsers"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "requests/failed",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Failed requests",
                                                        "color": "#EC008C"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Failed requests",
                                                  "visualization": {
                                                    "chartType": 3,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "failures"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "requests/duration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Server response time",
                                                        "color": "#00BCF2"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Server response time",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "performance"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 12,
                                          "y": 2,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/networkDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Page load network connect time",
                                                        "color": "#7E58FF"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/processingDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Client processing time",
                                                        "color": "#44F1C8"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/sendDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Send request time",
                                                        "color": "#EB9371"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "browserTimings/receiveDuration",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Receiving response time",
                                                        "color": "#0672F1"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average page load time breakdown",
                                                  "visualization": {
                                                    "chartType": 3,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "availabilityResults/availabilityPercentage",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Availability",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average availability",
                                                  "visualization": {
                                                    "chartType": 3,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  },
                                                  "openBladeOnClick": {
                                                    "openBlade": true,
                                                    "destinationBlade": {
                                                      "extensionName": "HubsExtension",
                                                      "bladeName": "ResourceMenuBlade",
                                                      "parameters": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]",
                                                        "menuid": "availability"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "exceptions/server",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Server exceptions",
                                                        "color": "#47BDF5"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "dependencies/failed",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Dependency failures",
                                                        "color": "#7E58FF"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Server exceptions and Dependency failures",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/processorCpuPercentage",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Processor time",
                                                        "color": "#47BDF5"
                                                      }
                                                    },
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/processCpuPercentage",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Process CPU",
                                                        "color": "#7E58FF"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average processor and process CPU utilization",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 12,
                                          "y": 5,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "exceptions/browser",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Browser exceptions",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Browser exceptions",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 0,
                                          "y": 8,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "availabilityResults/count",
                                                      "aggregationType": 7,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Availability test results count",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Availability test results count",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 4,
                                          "y": 8,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/processIOBytesPerSecond",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Process IO rate",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average process I/O rate",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      },
                                      {
                                        "position": {
                                          "x": 8,
                                          "y": 8,
                                          "colSpan": 4,
                                          "rowSpan": 3
                                        },
                                        "metadata": {
                                          "inputs": [
                                            {
                                              "name": "options",
                                              "value": {
                                                "chart": {
                                                  "metrics": [
                                                    {
                                                      "resourceMetadata": {
                                                        "id": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('applicationInsightsName'))]"
                                                      },
                                                      "name": "performanceCounters/memoryAvailableBytes",
                                                      "aggregationType": 4,
                                                      "namespace": "microsoft.insights/components",
                                                      "metricVisualization": {
                                                        "displayName": "Available memory",
                                                        "color": "#47BDF5"
                                                      }
                                                    }
                                                  ],
                                                  "title": "Average available memory",
                                                  "visualization": {
                                                    "chartType": 2,
                                                    "legendVisualization": {
                                                      "isVisible": true,
                                                      "position": 2,
                                                      "hideSubtitle": false
                                                    },
                                                    "axisVisualization": {
                                                      "x": {
                                                        "isVisible": true,
                                                        "axisType": 2
                                                      },
                                                      "y": {
                                                        "isVisible": true,
                                                        "axisType": 1
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "name": "sharedTimeRange",
                                              "isOptional": true
                                            }
                                          ],
                                          "type": "Extension/HubsExtension/PartType/MonitorChartPart",
                                          "settings": {}
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Insights/components', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "connectionString": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('name')), '2020-02-02').ConnectionString]"
                    },
                    "instrumentationKey": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('name')), '2020-02-02').InstrumentationKey]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'loganalytics')]"
              ]
            }
          ],
          "outputs": {
            "applicationInsightsConnectionString": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationinsights'), '2020-10-01').outputs.connectionString.value]"
            },
            "applicationInsightsInstrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationinsights'), '2020-10-01').outputs.instrumentationKey.value]"
            },
            "applicationInsightsName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'applicationinsights'), '2020-10-01').outputs.name.value]"
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loganalytics'), '2020-10-01').outputs.id.value]"
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'loganalytics'), '2020-10-01').outputs.name.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "container-apps",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "app"
          },
          "containerAppsEnvironmentName": "[if(not(empty(parameters('containerAppsEnvironmentName'))), createObject('value', parameters('containerAppsEnvironmentName')), createObject('value', format('{0}{1}', variables('abbrs').appManagedEnvironments, variables('resourceToken'))))]",
          "containerRegistryName": "[if(not(empty(parameters('containerRegistryName'))), createObject('value', parameters('containerRegistryName')), createObject('value', format('{0}{1}', variables('abbrs').containerRegistryRegistries, variables('resourceToken'))))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "logAnalyticsWorkspaceName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'monitoring'), '2020-10-01').outputs.logAnalyticsWorkspaceName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "760581391181555772"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "containerAppsEnvironmentName": {
              "type": "string",
              "defaultValue": ""
            },
            "containerRegistryName": {
              "type": "string",
              "defaultValue": ""
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-container-apps-environment', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('containerAppsEnvironmentName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "logAnalyticsWorkspaceName": {
                    "value": "[parameters('logAnalyticsWorkspaceName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.15.31.15270",
                      "templateHash": "10909390145858388545"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "logAnalyticsWorkspaceName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.App/managedEnvironments",
                      "apiVersion": "2022-03-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "appLogsConfiguration": {
                          "destination": "log-analytics",
                          "logAnalyticsConfiguration": {
                            "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2022-10-01').customerId]",
                            "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), '2022-10-01').primarySharedKey]"
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-container-registry', parameters('name'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('containerRegistryName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.15.31.15270",
                      "templateHash": "5792987223121042654"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "adminUserEnabled": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "anonymousPullEnabled": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "dataEndpointEnabled": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "encryption": {
                      "type": "object",
                      "defaultValue": {
                        "status": "disabled"
                      }
                    },
                    "networkRuleBypassOptions": {
                      "type": "string",
                      "defaultValue": "AzureServices"
                    },
                    "publicNetworkAccess": {
                      "type": "string",
                      "defaultValue": "Enabled"
                    },
                    "sku": {
                      "type": "object",
                      "defaultValue": {
                        "name": "Basic"
                      }
                    },
                    "zoneRedundancy": {
                      "type": "string",
                      "defaultValue": "Disabled"
                    },
                    "workspaceId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "The log analytics workspace id used for logging & monitoring"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.ContainerRegistry/registries",
                      "apiVersion": "2022-02-01-preview",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": "[parameters('sku')]",
                      "properties": {
                        "adminUserEnabled": "[parameters('adminUserEnabled')]",
                        "anonymousPullEnabled": "[parameters('anonymousPullEnabled')]",
                        "dataEndpointEnabled": "[parameters('dataEndpointEnabled')]",
                        "encryption": "[parameters('encryption')]",
                        "networkRuleBypassOptions": "[parameters('networkRuleBypassOptions')]",
                        "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
                        "zoneRedundancy": "[parameters('zoneRedundancy')]"
                      }
                    },
                    {
                      "condition": "[not(empty(parameters('workspaceId')))]",
                      "type": "Microsoft.Insights/diagnosticSettings",
                      "apiVersion": "2021-05-01-preview",
                      "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', parameters('name'))]",
                      "name": "registry-diagnostics",
                      "properties": {
                        "workspaceId": "[parameters('workspaceId')]",
                        "logs": [
                          {
                            "category": "ContainerRegistryRepositoryEvents",
                            "enabled": true
                          },
                          {
                            "category": "ContainerRegistryLoginEvents",
                            "enabled": true
                          }
                        ],
                        "metrics": [
                          {
                            "category": "AllMetrics",
                            "enabled": true,
                            "timeGrain": "PT1M"
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "loginServer": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('name')), '2022-02-01-preview').loginServer]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "environmentName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-apps-environment', parameters('name'))), '2020-10-01').outputs.name.value]"
            },
            "registryLoginServer": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-registry', parameters('name'))), '2020-10-01').outputs.loginServer.value]"
            },
            "registryName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-registry', parameters('name'))), '2020-10-01').outputs.name.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'monitoring')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "storage",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(not(empty(parameters('storageAccountName'))), createObject('value', parameters('storageAccountName')), createObject('value', format('{0}{1}', variables('abbrs').storageStorageAccounts, variables('resourceToken'))))]",
          "allowBlobPublicAccess": {
            "value": true
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "containers": {
            "value": [
              {
                "name": "[if(not(empty(parameters('storageAccountName'))), parameters('storageAccountName'), format('{0}{1}', variables('abbrs').storageStorageAccounts, variables('resourceToken')))]",
                "publicAccess": "Blob"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "9730192607544319428"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "allowBlobPublicAccess": {
              "type": "bool",
              "defaultValue": false
            },
            "containers": {
              "type": "array",
              "defaultValue": []
            },
            "kind": {
              "type": "string",
              "defaultValue": "StorageV2"
            },
            "minimumTlsVersion": {
              "type": "string",
              "defaultValue": "TLS1_2"
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "Standard_LRS"
              }
            }
          },
          "resources": [
            {
              "copy": {
                "name": "container",
                "count": "[length(parameters('containers'))]"
              },
              "condition": "[not(empty(parameters('containers')))]",
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}/{2}', parameters('name'), 'default', parameters('containers')[copyIndex()].name)]",
              "properties": {
                "publicAccess": "[if(contains(parameters('containers')[copyIndex()], 'publicAccess'), parameters('containers')[copyIndex()].publicAccess, 'None')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('name'), 'default')]"
              ]
            },
            {
              "condition": "[not(empty(parameters('containers')))]",
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}/{1}', parameters('name'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2022-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "sku": "[parameters('sku')]",
              "properties": {
                "minimumTlsVersion": "[parameters('minimumTlsVersion')]",
                "allowBlobPublicAccess": "[parameters('allowBlobPublicAccess')]",
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Allow"
                }
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "primaryEndpoints": {
              "type": "object",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('name')), '2022-05-01').primaryEndpoints]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]"
      ]
    },
    {
      "condition": "[parameters('useAPIM')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "apim",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(not(empty(parameters('apimServiceName'))), createObject('value', parameters('apimServiceName')), createObject('value', format('{0}{1}', variables('abbrs').apiManagementService, variables('resourceToken'))))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "applicationInsightsName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'monitoring'), '2020-10-01').outputs.applicationInsightsName.value]"
          },
          "sku": {
            "value": "Developer"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "10843439627324326555"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "publisherEmail": {
              "type": "string",
              "defaultValue": "noreply@microsoft.com",
              "minLength": 1,
              "metadata": {
                "description": "The email address of the owner of the service"
              }
            },
            "publisherName": {
              "type": "string",
              "defaultValue": "n/a",
              "minLength": 1,
              "metadata": {
                "description": "The name of the owner of the service"
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "Consumption",
              "allowedValues": [
                "Consumption",
                "Developer",
                "Standard",
                "Premium"
              ],
              "metadata": {
                "description": "The pricing tier of this API Management service"
              }
            },
            "skuCount": {
              "type": "int",
              "defaultValue": 0,
              "allowedValues": [
                0,
                1,
                2
              ],
              "metadata": {
                "description": "The instance size of this API Management service."
              }
            },
            "applicationInsightsName": {
              "type": "string",
              "metadata": {
                "description": "Azure Application Insights Name"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.ApiManagement/service",
              "apiVersion": "2021-08-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[union(parameters('tags'), createObject('azd-service-name', parameters('name')))]",
              "sku": {
                "name": "[parameters('sku')]",
                "capacity": "[if(equals(parameters('sku'), 'Consumption'), 0, if(equals(parameters('sku'), 'Developer'), 1, parameters('skuCount')))]"
              },
              "properties": {
                "publisherEmail": "[parameters('publisherEmail')]",
                "publisherName": "[parameters('publisherName')]",
                "customProperties": "[if(equals(parameters('sku'), 'Consumption'), createObject(), createObject('Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_GCM_SHA256', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_256_CBC_SHA256', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA256', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_256_CBC_SHA', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TLS_RSA_WITH_AES_128_CBC_SHA', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Ssl30', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11', 'false', 'Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Ssl30', 'false'))]"
              }
            },
            {
              "condition": "[not(empty(parameters('applicationInsightsName')))]",
              "type": "Microsoft.ApiManagement/service/loggers",
              "apiVersion": "2021-12-01-preview",
              "name": "[format('{0}/{1}', parameters('name'), 'app-insights-logger')]",
              "properties": {
                "credentials": {
                  "instrumentationKey": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').InstrumentationKey]"
                },
                "description": "Logger to Azure Application Insights",
                "isBuffered": false,
                "loggerType": "applicationInsights",
                "resourceId": "[resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "apimServiceName": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'monitoring')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]"
      ]
    },
    {
      "condition": "[parameters('useAPIM')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "apim-api",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(parameters('useAPIM'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'apim'), '2020-10-01').outputs.apimServiceName.value), createObject('value', ''))]",
          "apiName": {
            "value": "todo-api"
          },
          "apiDisplayName": {
            "value": "Simple Todo API"
          },
          "apiDescription": {
            "value": "This is a simple Todo API"
          },
          "apiPath": {
            "value": "todo"
          },
          "webFrontendUrl": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'portal'), '2020-10-01').outputs.SERVICE_WEB_URI.value]"
          },
          "apiBackendUrl": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'api'), '2020-10-01').outputs.SERVICE_API_URI.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "520669213587853752"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "apiName": {
              "type": "string",
              "minLength": 1,
              "metadata": {
                "description": "Resource name to uniquely identify this API within the API Management service instance"
              }
            },
            "apiDisplayName": {
              "type": "string",
              "maxLength": 300,
              "minLength": 1,
              "metadata": {
                "description": "The Display Name of the API"
              }
            },
            "apiDescription": {
              "type": "string",
              "minLength": 1,
              "metadata": {
                "description": "Description of the API. May include HTML formatting tags."
              }
            },
            "apiPath": {
              "type": "string",
              "minLength": 1,
              "metadata": {
                "description": "Relative URL uniquely identifying this API and all of its resource paths within the API Management service instance. It is appended to the API endpoint base URL specified during the service instance creation to form a public URL for this API."
              }
            },
            "webFrontendUrl": {
              "type": "string",
              "metadata": {
                "description": "Absolute URL of the web frontend"
              }
            },
            "apiBackendUrl": {
              "type": "string",
              "metadata": {
                "description": "Absolute URL of the backend service implementing this API."
              }
            }
          },
          "variables": {
            "$fxv#0": "<!-- Policy configuration for the API. Explore other sample policies at https://learn.microsoft.com/en-us/azure/api-management/policies/ -->\n<policies>\n    <inbound>\n        <base />\n        <!-- This policy is needed to handle preflight requests using the OPTIONS method. Learn more at https://learn.microsoft.com/en-us/azure/api-management/api-management-cross-domain-policies  -->\n        <cors allow-credentials=\"false\">\n            <allowed-origins>\n                <origin>{origin}</origin>\n            </allowed-origins>\n            <allowed-methods>\n                <method>PUT</method>\n                <method>GET</method>\n                <method>POST</method>\n                <method>DELETE</method>\n                <method>PATCH</method>\n            </allowed-methods>\n            <allowed-headers>\n                <header>*</header>\n            </allowed-headers>\n            <expose-headers>\n                <header>*</header>\n            </expose-headers>\n        </cors>\n        <!-- Optional policy to validate the request content. Learn more at https://learn.microsoft.com/en-us/azure/api-management/validation-policies#validate-content -->\n        <validate-content unspecified-content-type-action=\"ignore\" max-size=\"1024\" size-exceeded-action=\"detect\" errors-variable-name=\"requestBodyValidation\">\n            <content type=\"application/json\" validate-as=\"json\" action=\"detect\" />\n        </validate-content>\n        <!-- Optional policy to send custom trace telemetry to Application Insights. Learn more at https://learn.microsoft.com/en-us/azure/api-management/api-management-advanced-policies#Trace -->\n        <trace source=\"@(context.Api.Name)\" severity=\"verbose\">\n            <message>Call to the @(context.Api.Name)</message>\n            <metadata name=\"User-Agent\" value=\"@(context.Request.Headers.GetValueOrDefault(\"User-Agent\",\"\"))\" />\n            <metadata name=\"Operation Method\" value=\"@(context.Request.Method)\" />\n            <metadata name=\"Host\" value=\"@(context.Request.Url.Host)\" />\n            <metadata name=\"Path\" value=\"@(context.Request.Url.Path)\" />\n        </trace>\n    </inbound>\n    <backend>\n        <limit-concurrency key=\"@(context.Request.IpAddress)\" max-count=\"3\">\n            <forward-request timeout=\"120\" />\n        </limit-concurrency>\n    </backend>\n    <outbound>\n        <base />\n        <!-- Optional policy to validate the response headers. Learn more at https://learn.microsoft.com/en-us/azure/api-management/validation-policies#validate-headers -->\n        <validate-headers specified-header-action=\"ignore\" unspecified-header-action=\"ignore\" errors-variable-name=\"responseHeadersValidation\" />\n        <!-- Optional policy to to send custom metrics to Application Insights. Learn more at https://learn.microsoft.com/en-us/azure/api-management/api-management-advanced-policies#emit-metrics -->\n        <choose>\n            <when condition=\"@(context.Response.StatusCode >= 200 && context.Response.StatusCode < 300)\">\n                <emit-metric name=\"Successful requests\" value=\"1\" namespace=\"apim-metrics\">\n                    <dimension name=\"API\" value=\"@(context.Api.Name)\" />\n                    <dimension name=\"Client IP\" value=\"@(context.Request.IpAddress)\" />\n                    <dimension name=\"Status Code\" value=\"@((String)context.Response.StatusCode.ToString())\" />\n                    <dimension name=\"Status Reason\" value=\"@(context.Response.StatusReason)\" />\n                </emit-metric>\n            </when>\n            <when condition=\"@(context.Response.StatusCode >= 400 && context.Response.StatusCode < 600)\">\n                <emit-metric name=\"Failed requests\" value=\"1\" namespace=\"apim-metrics\">\n                    <dimension name=\"API\" value=\"@(context.Api.Name)\" />\n                    <dimension name=\"Client IP\" value=\"@(context.Request.IpAddress)\" />\n                    <dimension name=\"Status Code\" value=\"@(context.Response.StatusCode.ToString())\" />\n                    <dimension name=\"Status Reason\" value=\"@(context.Response.StatusReason)\" />\n                    <dimension name=\"Error Source\" value=\"backend\" />\n                </emit-metric>\n            </when>\n        </choose>\n    </outbound>\n    <on-error>\n        <base />\n        <!-- Optional policy to handle errors. Learn more at https://learn.microsoft.com/en-us/azure/api-management/api-management-error-handling-policies -->\n        <trace source=\"@(context.Api.Name)\" severity=\"error\">\n            <message>Failed to process the @(context.Api.Name)</message>\n            <metadata name=\"User-Agent\" value=\"@(context.Request.Headers.GetValueOrDefault(\"User-Agent\",\"\"))\" />\n            <metadata name=\"Operation Method\" value=\"@(context.Request.Method)\" />\n            <metadata name=\"Host\" value=\"@(context.Request.Url.Host)\" />\n            <metadata name=\"Path\" value=\"@(context.Request.Url.Path)\" />\n            <metadata name=\"Error Reason\" value=\"@(context.LastError.Reason)\" />\n            <metadata name=\"Error Message\" value=\"@(context.LastError.Message)\" />\n        </trace>\n        <emit-metric name=\"Failed requests\" value=\"1\" namespace=\"apim-metrics\">\n            <dimension name=\"API\" value=\"@(context.Api.Name)\" />\n            <dimension name=\"Client IP\" value=\"@(context.Request.IpAddress)\" />\n            <dimension name=\"Status Code\" value=\"500\" />\n            <dimension name=\"Status Reason\" value=\"@(context.LastError.Reason)\" />\n            <dimension name=\"Error Source\" value=\"gateway\" />\n        </emit-metric>\n        <!-- Optional policy to hide error details and provide a custom generic message. Learn more at https://learn.microsoft.com/en-us/azure/api-management/api-management-advanced-policies#ReturnResponse -->\n        <return-response>\n            <set-status code=\"500\" reason=\"Internal Server Error\" />\n            <set-body>An unexpected error has occurred.</set-body>\n        </return-response>\n    </on-error>\n</policies>\n",
            "$fxv#1": "openapi: 3.0.3\n\ninfo:\n  title: Contoso Real Estate Stripe API - OpenAPI 3.0\n  description: |-\n    This is the Stripe integration server for Contoso Real Estate company.\n  version: 1.0.0\n  contact: {}\n\nservers:\n  - url: /\n    description: Hosted production endpoint\n  - url: http://localhost:4242\n    description: Local dev server\n\ntags:\n  - name: stripe\n    description: Related to Stripe integrations\n\npaths:\n  /stripe/checkout:\n    post:\n      tags:\n        - stripe\n      summary: Create Stripe checkout session\n      description: Create Stripe checkout session\n      operationId: createCheckoutSession\n      requestBody:\n        description: Checkout session object to be created\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CheckoutRequest\"\n      responses:\n        \"200\":\n          description: OK - Returns the session URL\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: \"#/components/schemas/CheckoutSession\"\n        \"400\":\n          description: Bad Request - Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"5XX\":\n          description: Internal Server Error - Something went wrong\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\n  /stripe/webhook:\n    post:\n      summary: Stripe webhook endpoint\n      description: Stripe webhook endpoint\n      tags:\n        - stripe\n      operationId: webhook\n      responses:\n        \"200\":\n          description: OK - Webhook event processed successfully\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Message\"\n        \"400\":\n          description: Bad Request - Invalid request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n        \"5XX\":\n          description: Internal Server Error - Something went wrong\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/Error\"\n\ncomponents:\n  schemas:\n    CheckoutRequest:\n      type: object\n      required:\n        - productName\n        - userId\n        - reservationId\n        - listingId\n        - guests\n        - from\n        - to\n        - amount\n        - currency\n        - createdAt\n      properties:\n        productName:\n          type: string\n          description: Product name\n          example: \"Big house in the city\"\n        userId:\n          type: string\n          format: uuid\n          description: ID of the user who made reservation\n          example: \"3bc1f3a89eb2dde64e827aea\"\n        reservationId:\n          type: string\n          description: ID of the reservation associated\n          example: \"62b1f3a89eb2dde64e827aea\"\n        listingId:\n          type: string\n          description: ID of the listing associated\n          example: \"22b1f3a89eb2dde64e827aea\"\n        guests:\n          type: integer\n          description: number of guests in reservation\n          example: 2\n        from:\n          type: string\n          format: date-time\n          description: reservation from date\n          example: \"2020-01-01T00:00:00.000Z\"\n        to:\n          type: string\n          format: date-time\n          description: reservation to date\n          example: \"2020-01-01T00:00:00.000Z\"\n        amount:\n          type: integer\n          description: Amount of the payment, in cents\n          example: 100\n        currency:\n          type: string\n          description: Currency of the payment\n          example: usd\n        createdAt:\n          type: string\n          format: date-time\n          description: Timestamp of when the reservation was created\n          example: \"2020-01-01T00:00:00.000Z\"\n\n    CheckoutSession:\n      type: object\n      required:\n        - sessionUrl\n      properties:\n        sessionUrl:\n          type: string\n          description: The URL of the checkout session\n          example: \"https://pay.here.com\"\n\n    Message:\n      type: object\n      required:\n        - message\n      properties:\n        message:\n          type: string\n          description: The status message\n          example: \"Operation successful\"\n\n    Error:\n      type: object\n      required:\n        - error\n      properties:\n        error:\n          type: string\n          description: error message\n          example: \"A detailed error message\"\n",
            "apiPolicyContent": "[replace(variables('$fxv#0'), '{origin}', parameters('webFrontendUrl'))]"
          },
          "resources": [
            {
              "type": "Microsoft.ApiManagement/service/apis",
              "apiVersion": "2021-12-01-preview",
              "name": "[format('{0}/{1}', parameters('name'), parameters('apiName'))]",
              "properties": {
                "description": "[parameters('apiDescription')]",
                "displayName": "[parameters('apiDisplayName')]",
                "path": "[parameters('apiPath')]",
                "protocols": [
                  "https"
                ],
                "subscriptionRequired": false,
                "type": "http",
                "format": "openapi",
                "serviceUrl": "[parameters('apiBackendUrl')]",
                "value": "[variables('$fxv#1')]"
              }
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/policies",
              "apiVersion": "2021-12-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('name'), parameters('apiName'), 'policy')]",
              "properties": {
                "format": "rawxml",
                "value": "[variables('apiPolicyContent')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('name'), parameters('apiName'))]"
              ]
            },
            {
              "type": "Microsoft.ApiManagement/service/apis/diagnostics",
              "apiVersion": "2021-12-01-preview",
              "name": "[format('{0}/{1}/{2}', parameters('name'), parameters('apiName'), 'applicationinsights')]",
              "properties": {
                "alwaysLog": "allErrors",
                "backend": {
                  "request": {
                    "body": {
                      "bytes": 1024
                    }
                  },
                  "response": {
                    "body": {
                      "bytes": 1024
                    }
                  }
                },
                "frontend": {
                  "request": {
                    "body": {
                      "bytes": 1024
                    }
                  },
                  "response": {
                    "body": {
                      "bytes": 1024
                    }
                  }
                },
                "httpCorrelationProtocol": "W3C",
                "logClientIp": true,
                "loggerId": "[resourceId('Microsoft.ApiManagement/service/loggers', parameters('name'), 'app-insights-logger')]",
                "metrics": true,
                "sampling": {
                  "percentage": 100,
                  "samplingType": "fixed"
                },
                "verbosity": "verbose"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('name'), parameters('apiName'))]"
              ]
            }
          ],
          "outputs": {
            "SERVICE_API_URI": {
              "type": "string",
              "value": "[format('{0}/{1}', reference(resourceId('Microsoft.ApiManagement/service', parameters('name')), '2021-08-01').gatewayUrl, parameters('apiPath'))]"
            },
            "SERVICE_API_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.ApiManagement/service', parameters('name'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'api')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'apim')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'portal')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "portal",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(not(empty(parameters('webServiceName'))), createObject('value', parameters('webServiceName')), createObject('value', format('{0}web-{1}', variables('abbrs').webStaticSites, variables('resourceToken'))))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "10025739935774068369"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "serviceName": {
              "type": "string",
              "defaultValue": "portal"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-staticwebapp-module', parameters('serviceName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('name')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[union(parameters('tags'), createObject('azd-service-name', parameters('serviceName')))]"
                  },
                  "sku": {
                    "value": {
                      "name": "Standard",
                      "tier": "Standard"
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.15.31.15270",
                      "templateHash": "11562025600321405194"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "sku": {
                      "type": "object",
                      "defaultValue": {
                        "name": "Free",
                        "tier": "Free"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Web/staticSites",
                      "apiVersion": "2022-03-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": "[parameters('sku')]",
                      "properties": {
                        "provider": "SwaCli"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "uri": {
                      "type": "string",
                      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/staticSites', parameters('name')), '2022-03-01').defaultHostname)]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "SERVICE_WEB_NAME": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-staticwebapp-module', parameters('serviceName'))), '2020-10-01').outputs.name.value]"
            },
            "SERVICE_WEB_URI": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-staticwebapp-module', parameters('serviceName'))), '2020-10-01').outputs.uri.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]"
      ]
    },
    {
      "condition": "[parameters('useAPIM')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "portal-apim",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(parameters('useAPIM'), createObject('value', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'apim'), '2020-10-01').outputs.apimServiceName.value), createObject('value', ''))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "useAPIM": {
            "value": "[parameters('useAPIM')]"
          },
          "portalName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'portal'), '2020-10-01').outputs.SERVICE_WEB_NAME.value]"
          },
          "apimId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'apim-api'), '2020-10-01').outputs.SERVICE_API_ID.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "16172405734469243244"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "useAPIM": {
              "type": "bool"
            },
            "portalName": {
              "type": "string"
            },
            "apimId": {
              "type": "string"
            }
          },
          "resources": [
            {
              "condition": "[parameters('useAPIM')]",
              "type": "Microsoft.Web/staticSites/linkedBackends",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', parameters('portalName'), parameters('name'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "backendResourceId": {
                  "id": "[parameters('apimId')]"
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'apim')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'apim-api')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'portal')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "cosmos",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "accountName": "[if(not(empty(parameters('cosmosAccountName'))), createObject('value', parameters('cosmosAccountName')), createObject('value', format('{0}{1}', variables('abbrs').documentDBDatabaseAccounts, variables('resourceToken'))))]",
          "databaseName": {
            "value": "[parameters('cosmosDatabaseName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'keyvault'), '2020-10-01').outputs.name.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "15959075722536601717"
            }
          },
          "parameters": {
            "accountName": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "collections": {
              "type": "array",
              "defaultValue": [
                {
                  "name": "TodoList",
                  "id": "TodoList",
                  "shardKey": "Hash",
                  "indexKey": "_id"
                },
                {
                  "name": "TodoItem",
                  "id": "TodoItem",
                  "shardKey": "Hash",
                  "indexKey": "_id"
                }
              ]
            },
            "databaseName": {
              "type": "string",
              "defaultValue": ""
            },
            "keyVaultName": {
              "type": "string"
            }
          },
          "variables": {
            "defaultDatabaseName": "Todo",
            "actualDatabaseName": "[if(not(empty(parameters('databaseName'))), parameters('databaseName'), variables('defaultDatabaseName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "cosmos-mongo",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "accountName": {
                    "value": "[parameters('accountName')]"
                  },
                  "databaseName": {
                    "value": "[variables('actualDatabaseName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "collections": {
                    "value": "[parameters('collections')]"
                  },
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.15.31.15270",
                      "templateHash": "10221077466413085085"
                    }
                  },
                  "parameters": {
                    "accountName": {
                      "type": "string"
                    },
                    "databaseName": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "collections": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "connectionStringKey": {
                      "type": "string",
                      "defaultValue": "AZURE-COSMOS-CONNECTION-STRING"
                    },
                    "keyVaultName": {
                      "type": "string"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "list",
                        "count": "[length(parameters('collections'))]"
                      },
                      "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections",
                      "apiVersion": "2022-08-15",
                      "name": "[format('{0}/{1}/{2}', split(format('{0}/{1}', parameters('accountName'), parameters('databaseName')), '/')[0], split(format('{0}/{1}', parameters('accountName'), parameters('databaseName')), '/')[1], parameters('collections')[copyIndex()].name)]",
                      "properties": {
                        "resource": {
                          "id": "[parameters('collections')[copyIndex()].id]",
                          "shardKey": {
                            "_id": "[parameters('collections')[copyIndex()].shardKey]"
                          },
                          "indexes": [
                            {
                              "key": {
                                "keys": [
                                  "[parameters('collections')[copyIndex()].indexKey]"
                                ]
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases', split(format('{0}/{1}', parameters('accountName'), parameters('databaseName')), '/')[0], split(format('{0}/{1}', parameters('accountName'), parameters('databaseName')), '/')[1])]"
                      ]
                    },
                    {
                      "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases",
                      "apiVersion": "2022-08-15",
                      "name": "[format('{0}/{1}', parameters('accountName'), parameters('databaseName'))]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "resource": {
                          "id": "[parameters('databaseName')]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', 'cosmos-mongo-account')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "cosmos-mongo-account",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('accountName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "keyVaultName": {
                            "value": "[parameters('keyVaultName')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "connectionStringKey": {
                            "value": "[parameters('connectionStringKey')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.15.31.15270",
                              "templateHash": "5987859148058265149"
                            }
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "keyVaultName": {
                              "type": "string"
                            },
                            "connectionStringKey": {
                              "type": "string",
                              "defaultValue": "AZURE-COSMOS-CONNECTION-STRING"
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2020-10-01",
                              "name": "cosmos-account",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {
                                  "name": {
                                    "value": "[parameters('name')]"
                                  },
                                  "location": {
                                    "value": "[parameters('location')]"
                                  },
                                  "connectionStringKey": {
                                    "value": "[parameters('connectionStringKey')]"
                                  },
                                  "keyVaultName": {
                                    "value": "[parameters('keyVaultName')]"
                                  },
                                  "kind": {
                                    "value": "MongoDB"
                                  },
                                  "tags": {
                                    "value": "[parameters('tags')]"
                                  }
                                },
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.15.31.15270",
                                      "templateHash": "390908413190806086"
                                    }
                                  },
                                  "parameters": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "location": {
                                      "type": "string",
                                      "defaultValue": "[resourceGroup().location]"
                                    },
                                    "tags": {
                                      "type": "object",
                                      "defaultValue": {}
                                    },
                                    "connectionStringKey": {
                                      "type": "string",
                                      "defaultValue": "AZURE-COSMOS-CONNECTION-STRING"
                                    },
                                    "keyVaultName": {
                                      "type": "string"
                                    },
                                    "kind": {
                                      "type": "string",
                                      "allowedValues": [
                                        "GlobalDocumentDB",
                                        "MongoDB",
                                        "Parse"
                                      ]
                                    }
                                  },
                                  "resources": [
                                    {
                                      "type": "Microsoft.DocumentDB/databaseAccounts",
                                      "apiVersion": "2022-08-15",
                                      "name": "[parameters('name')]",
                                      "kind": "[parameters('kind')]",
                                      "location": "[parameters('location')]",
                                      "tags": "[parameters('tags')]",
                                      "properties": {
                                        "consistencyPolicy": {
                                          "defaultConsistencyLevel": "Session"
                                        },
                                        "locations": [
                                          {
                                            "locationName": "[parameters('location')]",
                                            "failoverPriority": 0,
                                            "isZoneRedundant": false
                                          }
                                        ],
                                        "databaseAccountOfferType": "Standard",
                                        "enableAutomaticFailover": false,
                                        "enableMultipleWriteLocations": false,
                                        "apiProperties": "[if(equals(parameters('kind'), 'MongoDB'), createObject('serverVersion', '4.0'), createObject())]",
                                        "capabilities": [
                                          {
                                            "name": "EnableServerless"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "Microsoft.KeyVault/vaults/secrets",
                                      "apiVersion": "2022-07-01",
                                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('connectionStringKey'))]",
                                      "properties": {
                                        "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('name')), '2022-08-15').connectionStrings[0].connectionString]"
                                      },
                                      "dependsOn": [
                                        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('name'))]"
                                      ]
                                    }
                                  ],
                                  "outputs": {
                                    "connectionStringKey": {
                                      "type": "string",
                                      "value": "[parameters('connectionStringKey')]"
                                    },
                                    "endpoint": {
                                      "type": "string",
                                      "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('name')), '2022-08-15').documentEndpoint]"
                                    },
                                    "id": {
                                      "type": "string",
                                      "value": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('name'))]"
                                    },
                                    "name": {
                                      "type": "string",
                                      "value": "[parameters('name')]"
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "outputs": {
                            "connectionStringKey": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-account'), '2020-10-01').outputs.connectionStringKey.value]"
                            },
                            "endpoint": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-account'), '2020-10-01').outputs.endpoint.value]"
                            },
                            "id": {
                              "type": "string",
                              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-account'), '2020-10-01').outputs.id.value]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "connectionStringKey": {
                      "type": "string",
                      "value": "[parameters('connectionStringKey')]"
                    },
                    "databaseName": {
                      "type": "string",
                      "value": "[parameters('databaseName')]"
                    },
                    "endpoint": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-mongo-account'), '2020-10-01').outputs.endpoint.value]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "connectionStringKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-mongo'), '2020-10-01').outputs.connectionStringKey.value]"
            },
            "databaseName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-mongo'), '2020-10-01').outputs.databaseName.value]"
            },
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'cosmos-mongo'), '2020-10-01').outputs.endpoint.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'keyvault')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "appserviceplan",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(not(empty(parameters('appServicePlanName'))), createObject('value', parameters('appServicePlanName')), createObject('value', format('{0}{1}', variables('abbrs').webServerFarms, variables('resourceToken'))))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "sku": {
            "value": {
              "name": "Y1",
              "tier": "Dynamic"
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "13142218918539764077"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "kind": {
              "type": "string",
              "defaultValue": ""
            },
            "reserved": {
              "type": "bool",
              "defaultValue": true
            },
            "sku": {
              "type": "object"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-03-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": "[parameters('sku')]",
              "kind": "[parameters('kind')]",
              "properties": {
                "reserved": "[parameters('reserved')]"
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/serverfarms', parameters('name'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "api",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(not(empty(parameters('apiServiceName'))), createObject('value', parameters('apiServiceName')), createObject('value', format('{0}api-{1}', variables('abbrs').webSitesFunctions, variables('resourceToken'))))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "applicationInsightsName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'monitoring'), '2020-10-01').outputs.applicationInsightsName.value]"
          },
          "appServicePlanId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'appserviceplan'), '2020-10-01').outputs.id.value]"
          },
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'keyvault'), '2020-10-01').outputs.name.value]"
          },
          "storageAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'storage'), '2020-10-01').outputs.name.value]"
          },
          "allowedOrigins": {
            "value": [
              "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'portal'), '2020-10-01').outputs.SERVICE_WEB_URI.value]"
            ]
          },
          "appSettings": {
            "value": {
              "AZURE_COSMOS_CONNECTION_STRING_KEY": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'cosmos'), '2020-10-01').outputs.connectionStringKey.value]",
              "AZURE_COSMOS_DATABASE_NAME": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'cosmos'), '2020-10-01').outputs.databaseName.value]",
              "AZURE_COSMOS_ENDPOINT": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'cosmos'), '2020-10-01').outputs.endpoint.value]"
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "2020607268338959119"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "allowedOrigins": {
              "type": "array",
              "defaultValue": []
            },
            "applicationInsightsName": {
              "type": "string",
              "defaultValue": ""
            },
            "appServicePlanId": {
              "type": "string"
            },
            "appSettings": {
              "type": "object",
              "defaultValue": {}
            },
            "keyVaultName": {
              "type": "string"
            },
            "serviceName": {
              "type": "string",
              "defaultValue": "api"
            },
            "storageAccountName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-functions-node-module', parameters('serviceName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('name')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[union(parameters('tags'), createObject('azd-service-name', parameters('serviceName')))]"
                  },
                  "allowedOrigins": {
                    "value": "[parameters('allowedOrigins')]"
                  },
                  "alwaysOn": {
                    "value": false
                  },
                  "appSettings": {
                    "value": "[parameters('appSettings')]"
                  },
                  "applicationInsightsName": {
                    "value": "[parameters('applicationInsightsName')]"
                  },
                  "appServicePlanId": {
                    "value": "[parameters('appServicePlanId')]"
                  },
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "runtimeName": {
                    "value": "node"
                  },
                  "runtimeVersion": {
                    "value": "16"
                  },
                  "storageAccountName": {
                    "value": "[parameters('storageAccountName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.15.31.15270",
                      "templateHash": "251166986080880099"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "applicationInsightsName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "appServicePlanId": {
                      "type": "string"
                    },
                    "keyVaultName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "managedIdentity": {
                      "type": "bool",
                      "defaultValue": "[not(empty(parameters('keyVaultName')))]"
                    },
                    "storageAccountName": {
                      "type": "string"
                    },
                    "runtimeName": {
                      "type": "string",
                      "allowedValues": [
                        "dotnet",
                        "dotnetcore",
                        "dotnet-isolated",
                        "node",
                        "python",
                        "java",
                        "powershell",
                        "custom"
                      ]
                    },
                    "runtimeNameAndVersion": {
                      "type": "string",
                      "defaultValue": "[format('{0}|{1}', parameters('runtimeName'), parameters('runtimeVersion'))]"
                    },
                    "runtimeVersion": {
                      "type": "string"
                    },
                    "extensionVersion": {
                      "type": "string",
                      "defaultValue": "~4",
                      "allowedValues": [
                        "~4",
                        "~3",
                        "~2",
                        "~1"
                      ]
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "functionapp,linux"
                    },
                    "allowedOrigins": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "alwaysOn": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "appCommandLine": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "appSettings": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "clientAffinityEnabled": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "enableOryxBuild": {
                      "type": "bool",
                      "defaultValue": "[contains(parameters('kind'), 'linux')]"
                    },
                    "functionAppScaleLimit": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "linuxFxVersion": {
                      "type": "string",
                      "defaultValue": "[parameters('runtimeNameAndVersion')]"
                    },
                    "minimumElasticInstanceCount": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "numberOfWorkers": {
                      "type": "int",
                      "defaultValue": -1
                    },
                    "scmDoBuildDuringDeployment": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "use32BitWorkerProcess": {
                      "type": "bool",
                      "defaultValue": false
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-functions', parameters('name'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "name": {
                            "value": "[parameters('name')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "tags": {
                            "value": "[parameters('tags')]"
                          },
                          "allowedOrigins": {
                            "value": "[parameters('allowedOrigins')]"
                          },
                          "alwaysOn": {
                            "value": "[parameters('alwaysOn')]"
                          },
                          "appCommandLine": {
                            "value": "[parameters('appCommandLine')]"
                          },
                          "applicationInsightsName": {
                            "value": "[parameters('applicationInsightsName')]"
                          },
                          "appServicePlanId": {
                            "value": "[parameters('appServicePlanId')]"
                          },
                          "appSettings": {
                            "value": "[union(parameters('appSettings'), createObject('AzureWebJobsStorage', format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-09-01').keys[0].value, environment().suffixes.storage), 'FUNCTIONS_EXTENSION_VERSION', parameters('extensionVersion'), 'FUNCTIONS_WORKER_RUNTIME', parameters('runtimeName')))]"
                          },
                          "clientAffinityEnabled": {
                            "value": "[parameters('clientAffinityEnabled')]"
                          },
                          "enableOryxBuild": {
                            "value": "[parameters('enableOryxBuild')]"
                          },
                          "functionAppScaleLimit": {
                            "value": "[parameters('functionAppScaleLimit')]"
                          },
                          "keyVaultName": {
                            "value": "[parameters('keyVaultName')]"
                          },
                          "kind": {
                            "value": "[parameters('kind')]"
                          },
                          "linuxFxVersion": {
                            "value": "[parameters('linuxFxVersion')]"
                          },
                          "managedIdentity": {
                            "value": "[parameters('managedIdentity')]"
                          },
                          "minimumElasticInstanceCount": {
                            "value": "[parameters('minimumElasticInstanceCount')]"
                          },
                          "numberOfWorkers": {
                            "value": "[parameters('numberOfWorkers')]"
                          },
                          "runtimeName": {
                            "value": "[parameters('runtimeName')]"
                          },
                          "runtimeVersion": {
                            "value": "[parameters('runtimeVersion')]"
                          },
                          "runtimeNameAndVersion": {
                            "value": "[parameters('runtimeNameAndVersion')]"
                          },
                          "scmDoBuildDuringDeployment": {
                            "value": "[parameters('scmDoBuildDuringDeployment')]"
                          },
                          "use32BitWorkerProcess": {
                            "value": "[parameters('use32BitWorkerProcess')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.15.31.15270",
                              "templateHash": "14898615681824392795"
                            }
                          },
                          "parameters": {
                            "name": {
                              "type": "string"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "tags": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "applicationInsightsName": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "appServicePlanId": {
                              "type": "string"
                            },
                            "keyVaultName": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "managedIdentity": {
                              "type": "bool",
                              "defaultValue": "[not(empty(parameters('keyVaultName')))]"
                            },
                            "runtimeName": {
                              "type": "string",
                              "allowedValues": [
                                "dotnet",
                                "dotnetcore",
                                "dotnet-isolated",
                                "node",
                                "python",
                                "java",
                                "powershell",
                                "custom"
                              ]
                            },
                            "runtimeNameAndVersion": {
                              "type": "string",
                              "defaultValue": "[format('{0}|{1}', parameters('runtimeName'), parameters('runtimeVersion'))]"
                            },
                            "runtimeVersion": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string",
                              "defaultValue": "app,linux"
                            },
                            "allowedOrigins": {
                              "type": "array",
                              "defaultValue": []
                            },
                            "alwaysOn": {
                              "type": "bool",
                              "defaultValue": true
                            },
                            "appCommandLine": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "appSettings": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "clientAffinityEnabled": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "enableOryxBuild": {
                              "type": "bool",
                              "defaultValue": "[contains(parameters('kind'), 'linux')]"
                            },
                            "functionAppScaleLimit": {
                              "type": "int",
                              "defaultValue": -1
                            },
                            "linuxFxVersion": {
                              "type": "string",
                              "defaultValue": "[parameters('runtimeNameAndVersion')]"
                            },
                            "minimumElasticInstanceCount": {
                              "type": "int",
                              "defaultValue": -1
                            },
                            "numberOfWorkers": {
                              "type": "int",
                              "defaultValue": -1
                            },
                            "scmDoBuildDuringDeployment": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "use32BitWorkerProcess": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "ftpsState": {
                              "type": "string",
                              "defaultValue": "FtpsOnly"
                            },
                            "healthCheckPath": {
                              "type": "string",
                              "defaultValue": ""
                            }
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Web/sites/config",
                              "apiVersion": "2022-03-01",
                              "name": "[format('{0}/{1}', parameters('name'), 'appsettings')]",
                              "properties": "[union(parameters('appSettings'), createObject('SCM_DO_BUILD_DURING_DEPLOYMENT', string(parameters('scmDoBuildDuringDeployment')), 'ENABLE_ORYX_BUILD', string(parameters('enableOryxBuild'))), if(not(empty(parameters('applicationInsightsName'))), createObject('APPLICATIONINSIGHTS_CONNECTION_STRING', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString), createObject()), if(not(empty(parameters('keyVaultName'))), createObject('AZURE_KEY_VAULT_ENDPOINT', reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2022-07-01').vaultUri), createObject()))]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Web/sites', parameters('name'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Web/sites/config",
                              "apiVersion": "2022-03-01",
                              "name": "[format('{0}/{1}', parameters('name'), 'logs')]",
                              "properties": {
                                "applicationLogs": {
                                  "fileSystem": {
                                    "level": "Verbose"
                                  }
                                },
                                "detailedErrorMessages": {
                                  "enabled": true
                                },
                                "failedRequestsTracing": {
                                  "enabled": true
                                },
                                "httpLogs": {
                                  "fileSystem": {
                                    "enabled": true,
                                    "retentionInDays": 1,
                                    "retentionInMb": 35
                                  }
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Web/sites', parameters('name'))]",
                                "[resourceId('Microsoft.Web/sites/config', parameters('name'), 'appsettings')]"
                              ]
                            },
                            {
                              "type": "Microsoft.Web/sites",
                              "apiVersion": "2022-03-01",
                              "name": "[parameters('name')]",
                              "location": "[parameters('location')]",
                              "tags": "[parameters('tags')]",
                              "kind": "[parameters('kind')]",
                              "properties": {
                                "serverFarmId": "[parameters('appServicePlanId')]",
                                "siteConfig": {
                                  "linuxFxVersion": "[parameters('linuxFxVersion')]",
                                  "alwaysOn": "[parameters('alwaysOn')]",
                                  "ftpsState": "[parameters('ftpsState')]",
                                  "minTlsVersion": "1.2",
                                  "appCommandLine": "[parameters('appCommandLine')]",
                                  "numberOfWorkers": "[if(not(equals(parameters('numberOfWorkers'), -1)), parameters('numberOfWorkers'), null())]",
                                  "minimumElasticInstanceCount": "[if(not(equals(parameters('minimumElasticInstanceCount'), -1)), parameters('minimumElasticInstanceCount'), null())]",
                                  "use32BitWorkerProcess": "[parameters('use32BitWorkerProcess')]",
                                  "functionAppScaleLimit": "[if(not(equals(parameters('functionAppScaleLimit'), -1)), parameters('functionAppScaleLimit'), null())]",
                                  "healthCheckPath": "[parameters('healthCheckPath')]",
                                  "cors": {
                                    "allowedOrigins": "[union(createArray('https://portal.azure.com', 'https://ms.portal.azure.com'), parameters('allowedOrigins'))]"
                                  }
                                },
                                "clientAffinityEnabled": "[parameters('clientAffinityEnabled')]",
                                "httpsOnly": true
                              },
                              "identity": {
                                "type": "[if(parameters('managedIdentity'), 'SystemAssigned', 'None')]"
                              }
                            }
                          ],
                          "outputs": {
                            "identityPrincipalId": {
                              "type": "string",
                              "value": "[if(parameters('managedIdentity'), reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-03-01', 'full').identity.principalId, '')]"
                            },
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]"
                            },
                            "uri": {
                              "type": "string",
                              "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', parameters('name')), '2022-03-01').defaultHostName)]"
                            }
                          }
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "identityPrincipalId": {
                      "type": "string",
                      "value": "[if(parameters('managedIdentity'), reference(resourceId('Microsoft.Resources/deployments', format('{0}-functions', parameters('name'))), '2020-10-01').outputs.identityPrincipalId.value, '')]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-functions', parameters('name'))), '2020-10-01').outputs.name.value]"
                    },
                    "uri": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-functions', parameters('name'))), '2020-10-01').outputs.uri.value]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "SERVICE_API_IDENTITY_PRINCIPAL_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-functions-node-module', parameters('serviceName'))), '2020-10-01').outputs.identityPrincipalId.value]"
            },
            "SERVICE_API_NAME": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-functions-node-module', parameters('serviceName'))), '2020-10-01').outputs.name.value]"
            },
            "SERVICE_API_URI": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-functions-node-module', parameters('serviceName'))), '2020-10-01').outputs.uri.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'appserviceplan')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'cosmos')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'keyvault')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'monitoring')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'portal')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'storage')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "cms",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(not(empty(parameters('cmsContainerAppName'))), createObject('value', parameters('cmsContainerAppName')), createObject('value', format('{0}cms-{1}', variables('abbrs').appContainerApps, variables('resourceToken'))))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "applicationInsightsName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'monitoring'), '2020-10-01').outputs.applicationInsightsName.value]"
          },
          "containerAppsEnvironmentName": "[if(not(empty(parameters('containerAppsEnvironmentName'))), createObject('value', parameters('containerAppsEnvironmentName')), createObject('value', format('{0}{1}', variables('abbrs').appManagedEnvironments, variables('resourceToken'))))]",
          "containerRegistryName": "[if(not(empty(parameters('containerRegistryName'))), createObject('value', parameters('containerRegistryName')), createObject('value', format('{0}{1}', variables('abbrs').containerRegistryRegistries, variables('resourceToken'))))]",
          "databaseHost": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'postgresql'), '2020-10-01').outputs.POSTGRES_DOMAIN_NAME.value]"
          },
          "databaseName": {
            "value": "[parameters('cmsDatabaseName')]"
          },
          "databasePassword": {
            "value": "[parameters('cmsDatabasePassword')]"
          },
          "appKeys": {
            "value": "[parameters('appKeys')]"
          },
          "apiTokenSalt": {
            "value": "[parameters('apiTokenSalt')]"
          },
          "jwtSecret": {
            "value": "[parameters('jwtSecret')]"
          },
          "adminJwtSecret": {
            "value": "[parameters('adminJwtSecret')]"
          },
          "storageAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'storage'), '2020-10-01').outputs.name.value]"
          },
          "storageContainerName": {
            "value": "[parameters('storageContainerName')]"
          },
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'keyvault'), '2020-10-01').outputs.name.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "2408678104250954586"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "adminJwtSecret": {
              "type": "securestring"
            },
            "apiTokenSalt": {
              "type": "securestring"
            },
            "appKeys": {
              "type": "securestring"
            },
            "applicationInsightsName": {
              "type": "string"
            },
            "containerAppsEnvironmentName": {
              "type": "string"
            },
            "containerRegistryName": {
              "type": "string"
            },
            "databaseHost": {
              "type": "string"
            },
            "databaseName": {
              "type": "string",
              "defaultValue": "strapi"
            },
            "databasePassword": {
              "type": "securestring"
            },
            "databaseUsername": {
              "type": "string",
              "defaultValue": "contoso"
            },
            "imageName": {
              "type": "string",
              "defaultValue": ""
            },
            "jwtSecret": {
              "type": "securestring"
            },
            "keyVaultName": {
              "type": "string"
            },
            "serviceName": {
              "type": "string",
              "defaultValue": "cms"
            },
            "storageAccountName": {
              "type": "string"
            },
            "storageContainerName": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-container-app-module', parameters('serviceName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('name')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[union(parameters('tags'), createObject('azd-service-name', parameters('serviceName')))]"
                  },
                  "containerAppsEnvironmentName": {
                    "value": "[parameters('containerAppsEnvironmentName')]"
                  },
                  "containerRegistryName": {
                    "value": "[parameters('containerRegistryName')]"
                  },
                  "containerCpuCoreCount": {
                    "value": "1.0"
                  },
                  "containerMemory": {
                    "value": "2.0Gi"
                  },
                  "env": {
                    "value": [
                      {
                        "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                        "value": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString]"
                      },
                      {
                        "name": "DATABASE_HOST",
                        "value": "[parameters('databaseHost')]"
                      },
                      {
                        "name": "DATABASE_USERNAME",
                        "value": "[parameters('databaseUsername')]"
                      },
                      {
                        "name": "DATABASE_PASSWORD",
                        "value": "[parameters('databasePassword')]"
                      },
                      {
                        "name": "DATABASE_NAME",
                        "value": "[parameters('databaseName')]"
                      },
                      {
                        "name": "JWT_SECRET",
                        "value": "[parameters('jwtSecret')]"
                      },
                      {
                        "name": "APP_KEYS",
                        "value": "[parameters('appKeys')]"
                      },
                      {
                        "name": "CMS_TOKEN_SALT",
                        "value": "[parameters('apiTokenSalt')]"
                      },
                      {
                        "name": "ADMIN_JWT_SECRET",
                        "value": "[parameters('adminJwtSecret')]"
                      },
                      {
                        "name": "NODE_ENV",
                        "value": "production"
                      },
                      {
                        "name": "STORAGE_ACCOUNT",
                        "value": "[parameters('storageAccountName')]"
                      },
                      {
                        "name": "STORAGE_ACCOUNT_KEY",
                        "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-09-01').keys[0].value]"
                      },
                      {
                        "name": "STORAGE_CONTAINER_NAME",
                        "value": "[parameters('storageContainerName')]"
                      },
                      {
                        "name": "STORAGE_URL",
                        "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-09-01').primaryEndpoints.blob]"
                      },
                      {
                        "name": "AZURE_KEY_VAULT_ENDPOINT",
                        "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2022-11-01').vaultUri]"
                      }
                    ]
                  },
                  "imageName": "[if(not(empty(parameters('imageName'))), createObject('value', parameters('imageName')), createObject('value', 'nginx:latest'))]",
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "targetPort": {
                    "value": 1337
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.15.31.15270",
                      "templateHash": "14136300684009509921"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "containerAppsEnvironmentName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "containerName": {
                      "type": "string",
                      "defaultValue": "main"
                    },
                    "containerRegistryName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "env": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "external": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "imageName": {
                      "type": "string"
                    },
                    "keyVaultName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "managedIdentity": {
                      "type": "bool",
                      "defaultValue": "[not(empty(parameters('keyVaultName')))]"
                    },
                    "targetPort": {
                      "type": "int",
                      "defaultValue": 80
                    },
                    "containerCpuCoreCount": {
                      "type": "string",
                      "defaultValue": "0.5",
                      "metadata": {
                        "description": "CPU cores allocated to a single container instance, e.g. 0.5"
                      }
                    },
                    "containerMemory": {
                      "type": "string",
                      "defaultValue": "1.0Gi",
                      "metadata": {
                        "description": "Memory allocated to a single container instance, e.g. 1Gi"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.App/containerApps",
                      "apiVersion": "2022-03-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "[if(parameters('managedIdentity'), 'SystemAssigned', 'None')]"
                      },
                      "properties": {
                        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppsEnvironmentName'))]",
                        "configuration": {
                          "activeRevisionsMode": "single",
                          "ingress": {
                            "external": "[parameters('external')]",
                            "targetPort": "[parameters('targetPort')]",
                            "transport": "auto"
                          },
                          "secrets": [
                            {
                              "name": "registry-password",
                              "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2022-02-01-preview').passwords[0].value]"
                            }
                          ],
                          "registries": [
                            {
                              "server": "[format('{0}.azurecr.io', parameters('containerRegistryName'))]",
                              "username": "[parameters('containerRegistryName')]",
                              "passwordSecretRef": "registry-password"
                            }
                          ]
                        },
                        "template": {
                          "containers": [
                            {
                              "image": "[parameters('imageName')]",
                              "name": "[parameters('containerName')]",
                              "env": "[parameters('env')]",
                              "resources": {
                                "cpu": "[json(parameters('containerCpuCoreCount'))]",
                                "memory": "[parameters('containerMemory')]"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "identityPrincipalId": {
                      "type": "string",
                      "value": "[if(parameters('managedIdentity'), reference(resourceId('Microsoft.App/containerApps', parameters('name')), '2022-03-01', 'full').identity.principalId, '')]"
                    },
                    "imageName": {
                      "type": "string",
                      "value": "[parameters('imageName')]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "uri": {
                      "type": "string",
                      "value": "[format('https://{0}', reference(resourceId('Microsoft.App/containerApps', parameters('name')), '2022-03-01').configuration.ingress.fqdn)]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "SERVICE_CMS_IDENTITY_PRINCIPAL_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-app-module', parameters('serviceName'))), '2020-10-01').outputs.identityPrincipalId.value]"
            },
            "SERVICE_CMS_NAME": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-app-module', parameters('serviceName'))), '2020-10-01').outputs.name.value]"
            },
            "SERVICE_CMS_URI": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-app-module', parameters('serviceName'))), '2020-10-01').outputs.uri.value]"
            },
            "SERVICE_CMS_IMAGE_NAME": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-app-module', parameters('serviceName'))), '2020-10-01').outputs.imageName.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'postgresql')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'keyvault')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'monitoring')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'storage')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "postgresql",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(not(empty(parameters('cmsDatabaseServerName'))), createObject('value', parameters('cmsDatabaseServerName')), createObject('value', format('{0}db-{1}', variables('abbrs').dBforPostgreSQLServers, variables('resourceToken'))))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "sku": {
            "value": {
              "name": "Standard_B1ms",
              "tier": "Burstable"
            }
          },
          "storage": {
            "value": {
              "storageSizeGB": 32
            }
          },
          "version": {
            "value": "13"
          },
          "administratorLogin": {
            "value": "[parameters('cmsDatabaseUser')]"
          },
          "administratorLoginPassword": {
            "value": "[parameters('cmsDatabasePassword')]"
          },
          "databaseNames": {
            "value": [
              "[parameters('cmsDatabaseName')]"
            ]
          },
          "allowAzureIPsFirewall": {
            "value": true
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "2149706621795974684"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "sku": {
              "type": "object"
            },
            "storage": {
              "type": "object"
            },
            "administratorLogin": {
              "type": "string"
            },
            "administratorLoginPassword": {
              "type": "securestring"
            },
            "databaseNames": {
              "type": "array",
              "defaultValue": []
            },
            "allowAzureIPsFirewall": {
              "type": "bool",
              "defaultValue": false
            },
            "allowAllIPsFirewall": {
              "type": "bool",
              "defaultValue": false
            },
            "allowedSingleIPs": {
              "type": "array",
              "defaultValue": []
            },
            "version": {
              "type": "string"
            }
          },
          "resources": [
            {
              "copy": {
                "name": "database",
                "count": "[length(parameters('databaseNames'))]"
              },
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
              "apiVersion": "2022-12-01",
              "name": "[format('{0}/{1}', parameters('name'), parameters('databaseNames')[copyIndex()])]",
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('name'))]"
              ]
            },
            {
              "condition": "[parameters('allowAllIPsFirewall')]",
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
              "apiVersion": "2022-12-01",
              "name": "[format('{0}/{1}', parameters('name'), 'allow-all-IPs')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "255.255.255.255"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('name'))]"
              ]
            },
            {
              "condition": "[parameters('allowAzureIPsFirewall')]",
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
              "apiVersion": "2022-12-01",
              "name": "[format('{0}/{1}', parameters('name'), 'allow-all-azure-internal-IPs')]",
              "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('name'))]"
              ]
            },
            {
              "copy": {
                "name": "firewall_single",
                "count": "[length(parameters('allowedSingleIPs'))]"
              },
              "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
              "apiVersion": "2022-12-01",
              "name": "[format('{0}/{1}', parameters('name'), format('allow-single-{0}', replace(parameters('allowedSingleIPs')[copyIndex()], '.', '')))]",
              "properties": {
                "startIpAddress": "[parameters('allowedSingleIPs')[copyIndex()]]",
                "endIpAddress": "[parameters('allowedSingleIPs')[copyIndex()]]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('name'))]"
              ]
            },
            {
              "type": "Microsoft.DBforPostgreSQL/flexibleServers",
              "apiVersion": "2022-12-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": "[parameters('sku')]",
              "properties": {
                "version": "[parameters('version')]",
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "storage": "[parameters('storage')]",
                "highAvailability": {
                  "mode": "Disabled"
                }
              }
            }
          ],
          "outputs": {
            "POSTGRES_DOMAIN_NAME": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('name')), '2022-12-01').fullyQualifiedDomainName]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "blog",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(not(empty(parameters('blogContainerAppName'))), createObject('value', parameters('blogContainerAppName')), createObject('value', format('{0}blog-{1}', variables('abbrs').appContainerApps, variables('resourceToken'))))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "applicationInsightsName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'monitoring'), '2020-10-01').outputs.applicationInsightsName.value]"
          },
          "containerAppsEnvironmentName": "[if(not(empty(parameters('containerAppsEnvironmentName'))), createObject('value', parameters('containerAppsEnvironmentName')), createObject('value', format('{0}{1}', variables('abbrs').appManagedEnvironments, variables('resourceToken'))))]",
          "containerRegistryName": "[if(not(empty(parameters('containerRegistryName'))), createObject('value', parameters('containerRegistryName')), createObject('value', format('{0}{1}', variables('abbrs').containerRegistryRegistries, variables('resourceToken'))))]",
          "cmsUrl": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'cms'), '2020-10-01').outputs.SERVICE_CMS_URI.value]"
          },
          "keyVaultName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'keyvault'), '2020-10-01').outputs.name.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "13943220151296430559"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "applicationInsightsName": {
              "type": "string"
            },
            "cmsUrl": {
              "type": "string"
            },
            "containerAppsEnvironmentName": {
              "type": "string"
            },
            "containerRegistryName": {
              "type": "string"
            },
            "imageName": {
              "type": "string",
              "defaultValue": ""
            },
            "keyVaultName": {
              "type": "string"
            },
            "serviceName": {
              "type": "string",
              "defaultValue": "blog"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-container-app-module', parameters('serviceName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('name')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[union(parameters('tags'), createObject('azd-service-name', parameters('serviceName')))]"
                  },
                  "containerAppsEnvironmentName": {
                    "value": "[parameters('containerAppsEnvironmentName')]"
                  },
                  "containerRegistryName": {
                    "value": "[parameters('containerRegistryName')]"
                  },
                  "containerCpuCoreCount": {
                    "value": "1.0"
                  },
                  "containerMemory": {
                    "value": "2.0Gi"
                  },
                  "env": {
                    "value": [
                      {
                        "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                        "value": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString]"
                      },
                      {
                        "name": "NEXT_PUBLIC_BLOG_URL",
                        "value": "[parameters('cmsUrl')]"
                      }
                    ]
                  },
                  "imageName": "[if(not(empty(parameters('imageName'))), createObject('value', parameters('imageName')), createObject('value', 'nginx:latest'))]",
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "targetPort": {
                    "value": 3000
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.15.31.15270",
                      "templateHash": "14136300684009509921"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "containerAppsEnvironmentName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "containerName": {
                      "type": "string",
                      "defaultValue": "main"
                    },
                    "containerRegistryName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "env": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "external": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "imageName": {
                      "type": "string"
                    },
                    "keyVaultName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "managedIdentity": {
                      "type": "bool",
                      "defaultValue": "[not(empty(parameters('keyVaultName')))]"
                    },
                    "targetPort": {
                      "type": "int",
                      "defaultValue": 80
                    },
                    "containerCpuCoreCount": {
                      "type": "string",
                      "defaultValue": "0.5",
                      "metadata": {
                        "description": "CPU cores allocated to a single container instance, e.g. 0.5"
                      }
                    },
                    "containerMemory": {
                      "type": "string",
                      "defaultValue": "1.0Gi",
                      "metadata": {
                        "description": "Memory allocated to a single container instance, e.g. 1Gi"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.App/containerApps",
                      "apiVersion": "2022-03-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "[if(parameters('managedIdentity'), 'SystemAssigned', 'None')]"
                      },
                      "properties": {
                        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppsEnvironmentName'))]",
                        "configuration": {
                          "activeRevisionsMode": "single",
                          "ingress": {
                            "external": "[parameters('external')]",
                            "targetPort": "[parameters('targetPort')]",
                            "transport": "auto"
                          },
                          "secrets": [
                            {
                              "name": "registry-password",
                              "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2022-02-01-preview').passwords[0].value]"
                            }
                          ],
                          "registries": [
                            {
                              "server": "[format('{0}.azurecr.io', parameters('containerRegistryName'))]",
                              "username": "[parameters('containerRegistryName')]",
                              "passwordSecretRef": "registry-password"
                            }
                          ]
                        },
                        "template": {
                          "containers": [
                            {
                              "image": "[parameters('imageName')]",
                              "name": "[parameters('containerName')]",
                              "env": "[parameters('env')]",
                              "resources": {
                                "cpu": "[json(parameters('containerCpuCoreCount'))]",
                                "memory": "[parameters('containerMemory')]"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "identityPrincipalId": {
                      "type": "string",
                      "value": "[if(parameters('managedIdentity'), reference(resourceId('Microsoft.App/containerApps', parameters('name')), '2022-03-01', 'full').identity.principalId, '')]"
                    },
                    "imageName": {
                      "type": "string",
                      "value": "[parameters('imageName')]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "uri": {
                      "type": "string",
                      "value": "[format('https://{0}', reference(resourceId('Microsoft.App/containerApps', parameters('name')), '2022-03-01').configuration.ingress.fqdn)]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "SERVICE_BLOG_IDENTITY_PRINCIPAL_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-app-module', parameters('serviceName'))), '2020-10-01').outputs.identityPrincipalId.value]"
            },
            "SERVICE_BLOG_NAME": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-app-module', parameters('serviceName'))), '2020-10-01').outputs.name.value]"
            },
            "SERVICE_BLOG_URI": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-app-module', parameters('serviceName'))), '2020-10-01').outputs.uri.value]"
            },
            "SERVICE_BLOG_IMAGE_NAME": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-app-module', parameters('serviceName'))), '2020-10-01').outputs.imageName.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'cms')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'keyvault')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'monitoring')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "stripe",
      "resourceGroup": "[format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": "[if(not(empty(parameters('stripeContainerAppName'))), createObject('value', parameters('stripeContainerAppName')), createObject('value', format('{0}stripe-{1}', variables('abbrs').appContainerApps, variables('resourceToken'))))]",
          "location": {
            "value": "[parameters('location')]"
          },
          "applicationInsightsName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'monitoring'), '2020-10-01').outputs.applicationInsightsName.value]"
          },
          "containerAppsEnvironmentName": "[if(not(empty(parameters('containerAppsEnvironmentName'))), createObject('value', parameters('containerAppsEnvironmentName')), createObject('value', format('{0}{1}', variables('abbrs').appManagedEnvironments, variables('resourceToken'))))]",
          "containerRegistryName": "[if(not(empty(parameters('containerRegistryName'))), createObject('value', parameters('containerRegistryName')), createObject('value', format('{0}{1}', variables('abbrs').containerRegistryRegistries, variables('resourceToken'))))]",
          "apiUrl": {
            "value": ""
          },
          "stripeSecretKey": {
            "value": "[parameters('stripeSecretKey')]"
          },
          "stripePublicKey": {
            "value": "[parameters('stripePublicKey')]"
          },
          "stripeWebhookSecret": {
            "value": "[parameters('stripeWebhookSecret')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.15.31.15270",
              "templateHash": "8472928663245224094"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "apiUrl": {
              "type": "string"
            },
            "applicationInsightsName": {
              "type": "string"
            },
            "containerAppsEnvironmentName": {
              "type": "string"
            },
            "containerRegistryName": {
              "type": "string"
            },
            "imageName": {
              "type": "string",
              "defaultValue": ""
            },
            "serviceName": {
              "type": "string",
              "defaultValue": "stripe"
            },
            "stripePublicKey": {
              "type": "string"
            },
            "stripeSecretKey": {
              "type": "securestring"
            },
            "stripeWebhookSecret": {
              "type": "securestring"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-container-app-module', parameters('serviceName'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('name')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[union(parameters('tags'), createObject('azd-service-name', parameters('serviceName')))]"
                  },
                  "containerAppsEnvironmentName": {
                    "value": "[parameters('containerAppsEnvironmentName')]"
                  },
                  "containerRegistryName": {
                    "value": "[parameters('containerRegistryName')]"
                  },
                  "containerCpuCoreCount": {
                    "value": "1.0"
                  },
                  "containerMemory": {
                    "value": "2.0Gi"
                  },
                  "env": {
                    "value": [
                      {
                        "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                        "value": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName')), '2020-02-02').ConnectionString]"
                      },
                      {
                        "name": "API_URL",
                        "value": "[parameters('apiUrl')]"
                      },
                      {
                        "name": "STRIPE_PUBLIC_KEY",
                        "value": "[parameters('stripePublicKey')]"
                      },
                      {
                        "name": "STRIPE_SECRET_KEY",
                        "value": "[parameters('stripeSecretKey')]"
                      },
                      {
                        "name": "STRIPE_WEBHOOK_SECRET",
                        "value": "[parameters('stripeWebhookSecret')]"
                      }
                    ]
                  },
                  "imageName": "[if(not(empty(parameters('imageName'))), createObject('value', parameters('imageName')), createObject('value', 'nginx:latest'))]",
                  "targetPort": {
                    "value": 3000
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.15.31.15270",
                      "templateHash": "14136300684009509921"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "containerAppsEnvironmentName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "containerName": {
                      "type": "string",
                      "defaultValue": "main"
                    },
                    "containerRegistryName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "env": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "external": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "imageName": {
                      "type": "string"
                    },
                    "keyVaultName": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "managedIdentity": {
                      "type": "bool",
                      "defaultValue": "[not(empty(parameters('keyVaultName')))]"
                    },
                    "targetPort": {
                      "type": "int",
                      "defaultValue": 80
                    },
                    "containerCpuCoreCount": {
                      "type": "string",
                      "defaultValue": "0.5",
                      "metadata": {
                        "description": "CPU cores allocated to a single container instance, e.g. 0.5"
                      }
                    },
                    "containerMemory": {
                      "type": "string",
                      "defaultValue": "1.0Gi",
                      "metadata": {
                        "description": "Memory allocated to a single container instance, e.g. 1Gi"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.App/containerApps",
                      "apiVersion": "2022-03-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "identity": {
                        "type": "[if(parameters('managedIdentity'), 'SystemAssigned', 'None')]"
                      },
                      "properties": {
                        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('containerAppsEnvironmentName'))]",
                        "configuration": {
                          "activeRevisionsMode": "single",
                          "ingress": {
                            "external": "[parameters('external')]",
                            "targetPort": "[parameters('targetPort')]",
                            "transport": "auto"
                          },
                          "secrets": [
                            {
                              "name": "registry-password",
                              "value": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2022-02-01-preview').passwords[0].value]"
                            }
                          ],
                          "registries": [
                            {
                              "server": "[format('{0}.azurecr.io', parameters('containerRegistryName'))]",
                              "username": "[parameters('containerRegistryName')]",
                              "passwordSecretRef": "registry-password"
                            }
                          ]
                        },
                        "template": {
                          "containers": [
                            {
                              "image": "[parameters('imageName')]",
                              "name": "[parameters('containerName')]",
                              "env": "[parameters('env')]",
                              "resources": {
                                "cpu": "[json(parameters('containerCpuCoreCount'))]",
                                "memory": "[parameters('containerMemory')]"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "identityPrincipalId": {
                      "type": "string",
                      "value": "[if(parameters('managedIdentity'), reference(resourceId('Microsoft.App/containerApps', parameters('name')), '2022-03-01', 'full').identity.principalId, '')]"
                    },
                    "imageName": {
                      "type": "string",
                      "value": "[parameters('imageName')]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "uri": {
                      "type": "string",
                      "value": "[format('https://{0}', reference(resourceId('Microsoft.App/containerApps', parameters('name')), '2022-03-01').configuration.ingress.fqdn)]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "SERVICE_STRIPE_NAME": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-app-module', parameters('serviceName'))), '2020-10-01').outputs.name.value]"
            },
            "SERVICE_STRIPE_URI": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-app-module', parameters('serviceName'))), '2020-10-01').outputs.uri.value]"
            },
            "SERVICE_STRIPE_IMAGE_NAME": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('{0}-container-app-module', parameters('serviceName'))), '2020-10-01').outputs.imageName.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'monitoring')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName')))]"
      ]
    }
  ],
  "outputs": {
    "AZURE_COSMOS_CONNECTION_STRING_KEY": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'cosmos'), '2020-10-01').outputs.connectionStringKey.value]"
    },
    "AZURE_COSMOS_DATABASE_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'cosmos'), '2020-10-01').outputs.databaseName.value]"
    },
    "APPLICATIONINSIGHTS_CONNECTION_STRING": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'monitoring'), '2020-10-01').outputs.applicationInsightsConnectionString.value]"
    },
    "APPLICATIONINSIGHTS_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'monitoring'), '2020-10-01').outputs.applicationInsightsName.value]"
    },
    "AZURE_CONTAINER_ENVIRONMENT_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'container-apps'), '2020-10-01').outputs.environmentName.value]"
    },
    "AZURE_CONTAINER_REGISTRY_ENDPOINT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'container-apps'), '2020-10-01').outputs.registryLoginServer.value]"
    },
    "AZURE_CONTAINER_REGISTRY_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'container-apps'), '2020-10-01').outputs.registryName.value]"
    },
    "AZURE_KEY_VAULT_ENDPOINT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'keyvault'), '2020-10-01').outputs.endpoint.value]"
    },
    "AZURE_KEY_VAULT_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'keyvault'), '2020-10-01').outputs.name.value]"
    },
    "AZURE_LOCATION": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "AZURE_TENANT_ID": {
      "type": "string",
      "value": "[tenant().tenantId]"
    },
    "REACT_APP_API_BASE_URL": {
      "type": "string",
      "value": "[if(parameters('useAPIM'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'apim-api'), '2020-10-01').outputs.SERVICE_API_URI.value, reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'api'), '2020-10-01').outputs.SERVICE_API_URI.value)]"
    },
    "REACT_APP_APPLICATIONINSIGHTS_CONNECTION_STRING": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'monitoring'), '2020-10-01').outputs.applicationInsightsConnectionString.value]"
    },
    "REACT_APP_WEB_BASE_URL": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'portal'), '2020-10-01').outputs.SERVICE_WEB_URI.value]"
    },
    "SERVICE_API_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'api'), '2020-10-01').outputs.SERVICE_API_NAME.value]"
    },
    "SERVICE_WEB_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'portal'), '2020-10-01').outputs.SERVICE_WEB_NAME.value]"
    },
    "USE_APIM": {
      "type": "bool",
      "value": "[parameters('useAPIM')]"
    },
    "SERVICE_API_ENDPOINTS": {
      "type": "array",
      "value": "[if(parameters('useAPIM'), createArray(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'apim-api'), '2020-10-01').outputs.SERVICE_API_URI.value, reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'api'), '2020-10-01').outputs.SERVICE_API_URI.value), createArray())]"
    },
    "SERVICE_WEB_URI": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'portal'), '2020-10-01').outputs.SERVICE_WEB_URI.value]"
    },
    "SERVICE_BLOG_URI": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'blog'), '2020-10-01').outputs.SERVICE_BLOG_URI.value]"
    },
    "SERVICE_BLOG_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'blog'), '2020-10-01').outputs.SERVICE_BLOG_NAME.value]"
    },
    "SERVICE_CMS_URI": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'cms'), '2020-10-01').outputs.SERVICE_CMS_URI.value]"
    },
    "SERVICE_CMS_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'cms'), '2020-10-01').outputs.SERVICE_CMS_NAME.value]"
    },
    "SERVICE_STRIPE_URI": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'stripe'), '2020-10-01').outputs.SERVICE_STRIPE_URI.value]"
    },
    "SERVICE_STRIPE_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'stripe'), '2020-10-01').outputs.SERVICE_STRIPE_NAME.value]"
    },
    "STORAGE_ACCOUNT_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'storage'), '2020-10-01').outputs.name.value]"
    },
    "STORAGE_CONTAINER_NAME": {
      "type": "string",
      "value": "[parameters('storageContainerName')]"
    },
    "SERVICE_CMS_SERVER_HOST": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('{0}{1}', variables('abbrs').resourcesResourceGroups, parameters('environmentName'))), 'Microsoft.Resources/deployments', 'postgresql'), '2020-10-01').outputs.POSTGRES_DOMAIN_NAME.value]"
    }
  }
}